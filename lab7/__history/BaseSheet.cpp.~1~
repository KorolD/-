#include "BaseSheet.h"

	BaseSheet::BaseSheet(int Amount){
		amount=Amount;
		stacks=new ItemStack[amount];
		return;
	}
	BaseSheet::~BaseSheet(){
		for(int i=0; i<amount; i++){
			stacks[i].~ItemStack();
		}
		delete stacks;
		return;
	}
	void BaseSheet::Add(int key, String data){
		stacks[key%amount].Add(key,data);
		return;
	}
	String BaseSheet::FindKey(int key){
		struct Item* temp=stacks[key%amount].FindKey(key);
		if(temp){
			return temp->data;
		}else{
			return NULL;
		}
	}
	void BaseSheet::DeleteKey(int key){
		stacks[key%amount].DeleteKey(key);
		return;
	}
	String BaseSheet::ShowNum(int num){
		return (IntToStr(num)+": "+stacks[num].Show());
	}
	int BaseSheet::GetAmount(){
		return amount;
	}
